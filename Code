import pyttsx3

import speech_recognition as sr

import os

import datetime

import wikipedia

import webbrowser

engine = pyttsx3.init('sapi5')

voices = engine.getProperty('voices') engine.setProperty('voice', voices[0].id)

def speak(audio): engine.say(audio) engine.runAndWait()

def WishMe(): hour = int(datetime.datetime.now().hour) if hour>=0 and hour<12: speak("Good morning!")

elif hour>=12 and hour<18: speak("Good afternoon!")

else: speak("Good evening!")

def takeCommand():

# it takes microphone input from user and returns string

r = sr.Recognizer()

with sr. Microphone() as source:

print("Listening...")

r.pause_threshold = 1

audio = r.listen(source)

try:

print("Recognizing...")

query =

r.recognize_google(audio, language = 'en-in')

print(f"User said: ", query)

except Exception as e:

print("Say that again please...")

return "None"

return query

if_name_ == '_main_':

WishMe()

speak("I am Jarvis, your virtual assistant")

speak("How may I help you?")

#while True:
if_name_ == '_main_':

WishMe()

speak("I am Jarvis, your virtual assistant")

speak("How may I help you?")

#while True:

query = takeCommand().lower()

# logic for executing tasks based on query

if 'wikipedia' in query: speak("Searching wikipedia") query =

query.replace("wikipedia", results = "")

wikipedia.summary(query, sentences = 2)

speak("According to wikipedia")

print(results)

speak(results)

elif 'youtube' in query:

speak("opening youtube")

webbrowser.open("youtube.com")

elif 'google' in query:

speak("opening google")

webbrowser.open("google.com")
elif 'time' in query:

strTime = datetime.date

time.now().strftime("%H:%M: %S")

print(strTime)

speak(f"Maam the time is {strTime}")

elif 'song' in query:

music_dir = 'D:\\Songs'

songs = os.listdir(music_dir)

os.startfile(os.path.join(music _dir,songs[0]))
